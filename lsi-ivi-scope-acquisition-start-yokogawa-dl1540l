#!/usr/bin/python3

# Usage: ./lsi-ivi-scope-acquisition-start-yokogawa-dl1540l <sample-rate> <samples> <trigger-source> <trigger-slope> <trigger-level> <ch1-name> <ch1-range> <ch1-params> ... <chN-name> <chN-range> <chN-params>

# Example: ./lsi-ivi-scope-acquisition-start-yokogawa-dl1540l 200000.000000000 2000000 ch1 positive 0.400000000 ch1 8.000000000 0.0

global args
args=None

import sys
import time
import sys
import os
import datetime
import vxi11

instr = vxi11.vxi11.Instrument("TCPIP::10.13.37.153::gpib,1::INSTR")

# Communication interface User's Manual https://cdn.tmi.yokogawa.com/IM701530-11E.pdf


#instr.write("*IDN?")

samples=2000000

sample_rate=float(sys.argv[1])
samples=int(sys.argv[2])
trigger_source=sys.argv[3]
trigger_slope=sys.argv[4]
trigger_level=float(sys.argv[5])

#print(instr.read())

con = instr

def cmd_binary(instr, cmd):
        instr.write(cmd)
        c = instr.read_raw(4*1024*1024)
        return c

def cmd(instr, cmd):
        result = ""
        instr.write(cmd)
        c = instr.read(4*1024*1024)
        result=c
        #result=c.decode("utf-8")
        return result

def setup_channel(channel, voltage_range):
        reply=cmd(con, ':CHANnel'+str(channel)+'?\n')
        print (reply)
        con.write(':CHAN'+str(channel)+':MODE ON\n')
        con.write(':CHAN'+str(channel)+':POS 0\n')
        con.write(':CHAN'+str(channel)+':PROBE 1\n')
        con.write('CHAN'+str(channel)+':VDIV:VALue %f V\n'%(voltage_range/8))
        print('CHAN'+str(channel)+':VDIV:VALue %f V\n'%(voltage_range/8))

def disable_channel(channel):
        reply=cmd(con, ':CHANnel'+str(channel)+'?\n')
        print (reply)
        con.write(':CHAN'+str(channel)+':MODE OFF\n')


con.write('*RST\n')
reply=cmd(con, '*IDN?\n')
print (reply)


# datetime object containing current date and time
now = datetime.datetime.now()
date_string = now.strftime("%Y/%m/%d")
time_string = now.strftime("%H:%M:%S")

print(date_string)
print(time_string)
con.write('SYSTem:CLOCk:TIME "%s"\n'%(time_string))

con.write(':TIM:TDIV %f\n'%((float(samples)/10)/sample_rate))

reply2=cmd(con, "WAVeform:LENGth?\n")
print(reply2)

disable_channel(1)
disable_channel(2)
disable_channel(3)
disable_channel(4)

channels_num = int((len(sys.argv)-6)/3)
print (channels_num)
for i in range(0,channels_num):
    name=sys.argv[6+i*3]
    voltage_range=float(sys.argv[6+i*3+1])
    params=sys.argv[6+i*3+2]

    setup_channel(int(name[2:]),voltage_range)



reply=cmd(con, 'ACQuire:RECordlength?\n')
print (reply)


reply=cmd(con, 'TRIGger?\n')
print (reply)

if(trigger_source != "-"):

    con.write('TRIGger:MODE SINGLE\n')
    #con.write('TRIGger:POSITION 0\n')
    if (trigger_slope=='negative'):
        slope_str="FALL"
    else:
        slope_str="RISE"
    con.write('TRIGGER:SIMPLE:EDGE:SOURCE %d\n'%(int(trigger_source[2:])))
    con.write('TRIGGER:EDGE:SLOPE %s\n'%(slope_str))
    con.write('TRIGger:SOURce:CHANnel%d:LEVel %fV\n'%(int(trigger_source[2:]), trigger_level))
    print('TRIGger:SOURce:CHANnel%d:LEVel %fV\n'%(int(trigger_source[2:]), trigger_level))
    con.write('TRIGger:SOURce:COUPling DC\n')
    con.write('TRIGger:POSITION -5\n')

#reply=cmd(con, 'TRIGger?\n')
#print (reply)


#reply=cmd(con, 'ACQuire:RECordlength?\n')
#print (reply)

#reply=cmd(con, "TIMebase:SRATe?\n")
#print(reply)


con.write('ACQuire:RECordlength %d\n'%(samples))


#con.write('*WAI\n')
#print (reply)
#time.sleep(4)

#reply=cmd(con, "TIMebase:SRATe?\n")
#print(reply)

reply=cmd(con, 'ACQuire:RECordlength?\n')
print (reply)


#reply=cmd(con, 'ACQuire:RECordlength?\n')
#print (reply)

#reply=cmd(con, "ACQuire?\n")
#print(reply)

#con.write('WAVEFORM:DATASELECT ACQDATA\n')
#con.write('TRIGger:ACTion:STARt\n')

con.write('START\n')

print("Started ...")
